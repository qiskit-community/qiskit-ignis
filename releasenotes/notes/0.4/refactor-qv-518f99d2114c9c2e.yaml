---
features:
  - |
    The :func:`qiskit.ignis.verification.qv_circuits` function has a new
    kwarg ``seed`` which can be used to specify a seed for the random number
    generator used to generate the Quantum Volume circuits. This can be useful
    for having a reproducible circuit.
deprecations:
  - |
    The kwargs ``qr`` and ``cr`` for the
    :func:`qiskit.ignis.verification.qv_circuits` function have been deprecated
    and will be removed in a future release. These kwargs were documented as
    being used for specifying a :class:`qiskit.circuit.QuantumRegister` and
    :class:`qiskit.circuit.ClassicalRegister` to use in the generated Quantum
    Volume circuits instead of creating new ones. However, the parameters were
    never actually respected and a new Register would always be created
    regardless of whether they were set or not. This behavior is unchanged and
    these kwargs still do not have any effect, but are being deprecated prior
    to removal to avoid a breaking change for users who may have been setting
    either.
  - |
    Support for passing in subsets of qubits as a list in the ``qubit_lists``
    parameter for the :func:`qiskit.ignis.verification.qv_circuits` function
    has been deprecated and will removed in a future release. In the past
    this was used to specify a layout to run the circuit on a device. In
    other words if you had a 5 qubit device and wanted to run a 2 qubit
    QV circuit on qubits 1, 3, and 4 of that device. You would pass in
    ``[1, 3, 4]`` as one of the lists in ``qubit_lists``, which would
    generate a 5 qubit virtual circuit and have qv applied to qubits 1, 3,
    and 4 in that virtual circuit. However, this functionality is not necessary
    and overlaps with the concept of ``initial_layout`` in the transpiler and
    whether a circuit has been embedded with a layout set. Moving forward
    instead you should just run :func:`~qiskit.compiler.transpile` or
    :func:`~qiskit.execute.execute` with initial layout set to do this. For
    example, running the above example would become::

      from qiskit import execute
      from qiskit.ignis.verification import qv_circuits

      initial_layout = [1, 3, 4]
      qv_circs, _ = qv_circuits([list(range3)])
      execute(qv_circuits, initial_layout=initial_layout)

upgrade:
  - |
    The :func:`qiskit.ignis.verification.qv_circuits` function is now using
    the circuit library class :class:`~qiskit.circuit.library.QuantumVolume`
    to construct its output instead of building the circuit from scratch.
    This may result in subtle differences from the output from the previous
    version.
