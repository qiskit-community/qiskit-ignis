---
features:
  - |
    Added a graph decoder that uses clustering and
    max_matching, defined as cluster_decoding.
    It can be accessed similarly to matching. Change the 
    algorithm = 'matching' to algorithm = 'clustering' to use it.
    Draw 3d and 2d error garph method added.
    for 2D:
    
    .. jupyter-execute::
    
      from qiskit.ignis.verification.topological_codes import RepetitionCode, GraphDecoder, GraphVisualization
      
      code = RepetitionCode(3,1)
      Graph = GraphDecoder(code)
      Error_Graph = Graph.make_error_graph('1 0  00 10 00')['0']
      GraphVisualization().draw_2d_error_graph(Error_Graph)

    for 3D:

      code = RepetitionCode(3,1)
      Graph = GraphDecoder(code)
      Error_Graph = Graph.make_error_graph('1 0  00 10 00')['0']
      Graph.draw_3d_error_graph(Error_Graph)
      
  - |    
    Function for 3d and 2d decoded graph are also added.
    for 2D:

    .. jupyter-execute::

      from qiskit.ignis.verification.topological_codes import RepetitionCode, GraphDecoder, GraphVisualization

      code = RepetitionCode(3,1)
      Graph = GraphDecoder(code)
      Error_Graph = Graph.make_error_graph('1 0  00 10 00')['0']
      [logical, Edgelist, nodelist]=Graph.cluster_decoding('1 0  00 10 00')
      GraphVisualization().draw_2d_decoded_graph(Error_Graph,Edgelist,nodelist)

    for 3D:

      code = RepetitionCode(3,1)
      Graph = GraphDecoder(code)
      Error_Graph = Graph.make_error_graph('1 0  00 10 00')['0']
      [logical, Edgelist, nodelist]=Graph.cluster_decoding('1 0  00 10 00')
      Graph.draw_3d_decoded_graph(Error_Graph,Edgelist,nodelist)
