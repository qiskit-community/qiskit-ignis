name: Tests
on:
  push:
    branches: [ master, 'stable/*' ]
  pull_request:
    branches: [ master, 'stable/*' ]
jobs:
  tests:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel
      - name: Install and Run Tests
        run: tox -e py
        if: matrix.python-version != '3.9'
      - name: Install and Run Tests
        run: tox -e py39
        if: matrix.python-version == '3.9'

  tests-macos:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: ["macOS-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel cvxopt
      - name: Install and Run Tests
        run: tox --sitepackages -e py
        if: matrix.python-version != '3.9'
      - name: Install and Run Tests
        run: tox --sitepackages -e py39
        if: matrix.python-version == '3.9'

  tests-no-opt:
    name: tests-python3.8-no-optional-dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8]
        os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel
      - name: Install and Run Tests
        run: tox -e no-opt
  windows-tests:
    name: tests-python${{ matrix.python-version }}-windows
    runs-on: windows-latest
    strategy:
      matrix:
        # TODO: Add 3.9 to the list after aer 0.8.0 release
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install deps
        run: pip install -U tox cvxopt setuptools virtualenv wheel
        shell: pwsh
      - name: Install and Run Tests
        run: tox --sitepackages -epy
        shell: bash -l {0}

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-lint-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-lint-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install Deps
        run: python -m pip install -U tox
      - name: Run lint
        run: tox -elint
  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-docs-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install Deps
        run: python -m pip install -U tox
      - name: Build Docs
        run: tox -edocs
      - uses: actions/upload-artifact@v2
        with:
          name: html_docs
          path: docs/_build/html
  tutorials:
    name: tutorials
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tutorials-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tutorials-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Setup tutorials job
        run: |
          set -e
          git clone https://github.com/Qiskit/qiskit-tutorials --depth=1
          python -m pip install --upgrade pip
          pip install -U -r requirements-dev.txt -c constraints.txt
          pip install -c constraints.txt git+https://github.com/Qiskit/qiskit-terra
          pip install -c constraints.txt -e .
          pip install -U "qiskit-ibmq-provider" "qiskit-aer" "z3-solver" "qiskit-ignis" "qiskit-aqua" "pyscf<1.7.4" "matplotlib<3.3.0" pylatexenc sphinx nbsphinx sphinx_rtd_theme cvxpy -c constraints.txt
          python setup.py build_ext --inplace
          sudo apt install -y graphviz pandoc
          pip check
        shell: bash
      - name: Run Tutorials
        run: |
          set -e
          cd qiskit-tutorials
          rm -rf tutorials/chemistry tutorials/circuits tutorials/circuits_advanced tutorials/finance tutorials/optimization tutorials/simulators tutorials/machine_learning tutorials/algorithms
          sphinx-build -b html . _build/html
      - uses: actions/upload-artifact@v2
        with:
          name: tutorials_html
          path: qiskit-tutorials/_build/html
